<?php
return array (
    'package' => 'Intercom',
    'tagline' => 'Access data and build integrations for this chat app.',
    'description' => 'Connect to the Intercom Customer Service API to access data and build integrations for this chat app. Test an API call and export the code snippet into your app.',
    'image' => 'https://logo.clearbit.com/intercom.com?s=128',
    'repo' => 'https://github.com/RapidSoftwareSolutions/Marketplace-Intercom-Package',
    'keywords' => array (
        'API', 'Intercom',
    ),
    'accounts' => array (
        'domain' => 'intercom.com',
        'credentials' => array (
            'clientId',
            'clientSecret'
        ),
    ),
    'blocks' => array (
        array (
            'name' => 'createUserByEmail',
            'description' => 'Create user by email.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'email',
                    'type' => 'String',
                    'info' => 'The user\'s email address.',
                    'required' => true,
                ),
                array (
                    'name' => 'userId',
                    'type' => 'String',
                    'info' => 'A unique string identifier for the user.',
                    'required' => false,
                ),
                array (
                    'name' => 'phone',
                    'type' => 'String',
                    'info' => 'The user\'s phone number.',
                    'required' => false,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'The user\'s full name.',
                    'required' => false,
                ),
                array (
                    'name' => 'lastSeenIp',
                    'type' => 'String',
                    'info' => 'An ip address.',
                    'required' => false,
                ),
                array (
                    'name' => 'customAttributes',
                    'type' => 'JSON',
                    'info' => 'A hash of key - value pairs containing any other data about the user you want Intercom to store.',
                    'required' => false,
                ),
                array (
                    'name' => 'lastSeenUserAgent',
                    'type' => 'String',
                    'info' => 'The user agent the user last visited your application with.',
                    'required' => false,
                ),
                array (
                    'name' => 'companies',
                    'type' => 'String',
                    'info' => 'Identifies the companies this user belongs to.',
                    'required' => false,
                ),
                array (
                    'name' => 'lastRequestAt',
                    'type' => 'String',
                    'info' => 'The date the user last visited your application, UNIX timestamp.',
                    'required' => false,
                ),
                array (
                    'name' => 'updateLastRequestAt',
                    'type' => 'Boolean',
                    'info' => 'If true, instructs Intercom to update the user\'s last_request_at value.',
                    'required' => false,
                ),
                array (
                    'name' => 'newSession',
                    'type' => 'Boolean',
                    'info' => 'If true, instructs Intercom to register the request as a session.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'createUserById',
            'description' => 'Create user by identifier.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'userId',
                    'type' => 'String',
                    'info' => 'A unique string identifier for the user.',
                    'required' => true,
                ),
                array (
                    'name' => 'email',
                    'type' => 'String',
                    'info' => 'The user\'s email address.',
                    'required' => false,
                ),
                array (
                    'name' => 'phone',
                    'type' => 'String',
                    'info' => 'The user\'s phone number.',
                    'required' => false,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'The user\'s full name.',
                    'required' => false,
                ),
                array (
                    'name' => 'lastSeenIp',
                    'type' => 'String',
                    'info' => 'An ip address.',
                    'required' => false,
                ),
                array (
                    'name' => 'customAttributes',
                    'type' => 'JSON',
                    'info' => 'A hash of key - value pairs containing any other data about the user you want Intercom to store.',
                    'required' => false,
                ),
                array (
                    'name' => 'lastSeenUserAgent',
                    'type' => 'String',
                    'info' => 'The user agent the user last visited your application with.',
                    'required' => false,
                ),
                array (
                    'name' => 'companies',
                    'type' => 'String',
                    'info' => 'Identifies the companies this user belongs to.',
                    'required' => false,
                ),
                array (
                    'name' => 'lastRequestAt',
                    'type' => 'String',
                    'info' => 'The date the user last visited your application, UNIX timestamp.',
                    'required' => false,
                ),
                array (
                    'name' => 'updateLastRequestAt',
                    'type' => 'Boolean',
                    'info' => 'If true, instructs Intercom to update the user\'s last_request_at value.',
                    'required' => false,
                ),
                array (
                    'name' => 'newSession',
                    'type' => 'Boolean',
                    'info' => 'If true, instructs Intercom to register the request as a session.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateUserByEmail',
            'description' => 'Update user by email.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'email',
                    'type' => 'String',
                    'info' => 'The user\'s email address.',
                    'required' => true,
                ),
                array (
                    'name' => 'userId',
                    'type' => 'String',
                    'info' => 'A unique string identifier for the user.',
                    'required' => false,
                ),
                array (
                    'name' => 'phone',
                    'type' => 'String',
                    'info' => 'The user\'s phone number.',
                    'required' => false,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'The user\'s full name.',
                    'required' => false,
                ),
                array (
                    'name' => 'lastSeenIp',
                    'type' => 'String',
                    'info' => 'An ip address.',
                    'required' => false,
                ),
                array (
                    'name' => 'customAttributes',
                    'type' => 'JSON',
                    'info' => 'A hash of key - value pairs containing any other data about the user you want Intercom to store.',
                    'required' => false,
                ),
                array (
                    'name' => 'lastSeenUserAgent',
                    'type' => 'String',
                    'info' => 'The user agent the user last visited your application with.',
                    'required' => false,
                ),
                array (
                    'name' => 'companies',
                    'type' => 'String',
                    'info' => 'Identifies the companies this user belongs to.',
                    'required' => false,
                ),
                array (
                    'name' => 'lastRequestAt',
                    'type' => 'String',
                    'info' => 'The date the user last visited your application, UNIX timestamp.',
                    'required' => false,
                ),
                array (
                    'name' => 'updateLastRequestAt',
                    'type' => 'Boolean',
                    'info' => 'If true, instructs Intercom to update the user\'s last_request_at value.',
                    'required' => false,
                ),
                array (
                    'name' => 'newSession',
                    'type' => 'Boolean',
                    'info' => 'If true, instructs Intercom to register the request as a session.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateUserById',
            'description' => 'Update user by identifier.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'userId',
                    'type' => 'String',
                    'info' => 'A unique string identifier for the user.',
                    'required' => true,
                ),
                array (
                    'name' => 'email',
                    'type' => 'String',
                    'info' => 'The user\'s email address.',
                    'required' => false,
                ),
                array (
                    'name' => 'phone',
                    'type' => 'String',
                    'info' => 'The user\'s phone number.',
                    'required' => false,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'The user\'s full name.',
                    'required' => false,
                ),
                array (
                    'name' => 'lastSeenIp',
                    'type' => 'String',
                    'info' => 'An ip address.',
                    'required' => false,
                ),
                array (
                    'name' => 'customAttributes',
                    'type' => 'JSON',
                    'info' => 'A hash of key - value pairs containing any other data about the user you want Intercom to store.',
                    'required' => false,
                ),
                array (
                    'name' => 'lastSeenUserAgent',
                    'type' => 'String',
                    'info' => 'The user agent the user last visited your application with.',
                    'required' => false,
                ),
                array (
                    'name' => 'companies',
                    'type' => 'String',
                    'info' => 'Identifies the companies this user belongs to.',
                    'required' => false,
                ),
                array (
                    'name' => 'lastRequestAt',
                    'type' => 'String',
                    'info' => 'The date the user last visited your application, UNIX timestamp.',
                    'required' => false,
                ),
                array (
                    'name' => 'updateLastRequestAt',
                    'type' => 'Boolean',
                    'info' => 'If true, instructs Intercom to update the user\'s last_request_at value.',
                    'required' => false,
                ),
                array (
                    'name' => 'newSession',
                    'type' => 'Boolean',
                    'info' => 'If true, instructs Intercom to register the request as a session.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getUsers',
            'description' => 'Fetch a list of users.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'page',
                    'type' => 'String',
                    'info' => 'what page of results to fetch.',
                    'required' => false,
                ),
                array (
                    'name' => 'perPage',
                    'type' => 'String',
                    'info' => 'how many results per page.',
                    'required' => false,
                ),
                array (
                    'name' => 'order',
                    'type' => 'String',
                    'info' => 'Return the users in ascending or descending order. One of: asc, desc.',
                    'required' => false,
                ),
                array (
                    'name' => 'sort',
                    'type' => 'String',
                    'info' => 'what field to sort the results by. One of: created_at, last_request_at, signed_up_at, updated_at.',
                    'required' => false,
                ),
                array (
                    'name' => 'createdSince',
                    'type' => 'String',
                    'info' => 'limit results to users that were created in that last number of days.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getUsersByTag',
            'description' => 'Fetch segmented users or leads by tag.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'tagId',
                    'type' => 'String',
                    'info' => 'The identifier of the tag to filter by.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getUsersBySegment',
            'description' => 'Fetch segmented users or leads by segment.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'segmentId',
                    'type' => 'String',
                    'info' => 'The identifier of the segment to filter by.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getSingleUser',
            'description' => 'Retrieve user by identifier.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'userId',
                    'type' => 'String',
                    'info' => 'The user identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'userIdType',
                    'type' => 'String',
                    'info' => 'The user identifier type. One of: intercom_id, user_id, email.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteUser',
            'description' => 'Delete user.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'userId',
                    'type' => 'String',
                    'info' => 'The user identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'userIdType',
                    'type' => 'String',
                    'info' => 'The user identifier type. One of: intercom_id, user_id, email.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'scrollUsers',
            'description' => 'Scroll over all users.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'scrollParam',
                    'type' => 'String',
                    'info' => 'Scroll parameter.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'createLead',
            'description' => 'Create lead.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'The name of the Lead.',
                    'required' => false,
                ),
                array (
                    'name' => 'userId',
                    'type' => 'String',
                    'info' => 'Identifier for the Lead.',
                    'required' => false,
                ),
                array (
                    'name' => 'email',
                    'type' => 'String',
                    'info' => 'The email you have defined for the Lead.',
                    'required' => false,
                ),
                array (
                    'name' => 'phone',
                    'type' => 'String',
                    'info' => 'The phone number you have defined for the lead.',
                    'required' => false,
                ),
                array (
                    'name' => 'avatarImageUrl',
                    'type' => 'String',
                    'info' => 'An avatar URL for the Lead.',
                    'required' => false,
                ),
                array (
                    'name' => 'userAgentData',
                    'type' => 'String',
                    'info' => 'Data about the last user agent the Lead was seen using.',
                    'required' => false,
                ),
                array (
                    'name' => 'lastSeenIp',
                    'type' => 'String',
                    'info' => 'An ip address.',
                    'required' => false,
                ),
                array (
                    'name' => 'companies',
                    'type' => 'Array',
                    'info' => 'Array of string, of companies for the Lead.',
                    'required' => false,
                ),
                array (
                    'name' => 'socialProfiles',
                    'type' => 'Array',
                    'info' => 'Array of string, of social profiles associated with the Lead.',
                    'required' => false,
                ),
                array (
                    'name' => 'segments',
                    'type' => 'Array',
                    'info' => 'Array of string, of segments the Lead.',
                    'required' => false,
                ),
                array (
                    'name' => 'tags',
                    'type' => 'Array',
                    'info' => 'Array of string, of tags associated with the Lead.',
                    'required' => false,
                ),
                array (
                    'name' => 'customAttributes',
                    'type' => 'JSON',
                    'info' => 'The custom attributes you have set on the Lead.',
                    'required' => false,
                ),
                array (
                    'name' => 'locationData',
                    'type' => 'JSON',
                    'info' => 'A Location Object relating to the Lead.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateLead',
            'description' => 'Update lead.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'userId',
                    'type' => 'String',
                    'info' => 'Identifier for the Lead.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'The name of the Lead.',
                    'required' => false,
                ),
                array (
                    'name' => 'email',
                    'type' => 'String',
                    'info' => 'The email you have defined for the Lead.',
                    'required' => false,
                ),
                array (
                    'name' => 'phone',
                    'type' => 'String',
                    'info' => 'The phone number you have defined for the lead.',
                    'required' => false,
                ),
                array (
                    'name' => 'avatarImageUrl',
                    'type' => 'String',
                    'info' => 'An avatar URL for the Lead.',
                    'required' => false,
                ),
                array (
                    'name' => 'userAgentData',
                    'type' => 'String',
                    'info' => 'Data about the last user agent the Lead was seen using.',
                    'required' => false,
                ),
                array (
                    'name' => 'lastSeenIp',
                    'type' => 'String',
                    'info' => 'An ip address.',
                    'required' => false,
                ),
                array (
                    'name' => 'companies',
                    'type' => 'Array',
                    'info' => 'Array of string, of companies for the Lead.',
                    'required' => false,
                ),
                array (
                    'name' => 'socialProfiles',
                    'type' => 'Array',
                    'info' => 'Array of string, of social profiles associated with the Lead.',
                    'required' => false,
                ),
                array (
                    'name' => 'segments',
                    'type' => 'Array',
                    'info' => 'Array of string, of segments the Lead.',
                    'required' => false,
                ),
                array (
                    'name' => 'tags',
                    'type' => 'Array',
                    'info' => 'Array of string, of tags associated with the Lead.',
                    'required' => false,
                ),
                array (
                    'name' => 'customAttributes',
                    'type' => 'JSON',
                    'info' => 'The custom attributes you have set on the Lead.',
                    'required' => false,
                ),
                array (
                    'name' => 'locationData',
                    'type' => 'JSON',
                    'info' => 'A Location Object relating to the Lead.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getLeads',
            'description' => 'Fetch a list of all leads.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getLeadsByEmail',
            'description' => 'Fetch all Leads with a given email.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'email',
                    'type' => 'String',
                    'info' => 'Email for fetch.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getSingleLead',
            'description' => 'Fetch single lead.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'userId',
                    'type' => 'String',
                    'info' => 'The lead identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'userIdType',
                    'type' => 'String',
                    'info' => 'The lead identifier type. One of: intercom_id, user_id, email.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'deleteLead',
            'description' => 'Delete lead.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'userId',
                    'type' => 'String',
                    'info' => 'The lead identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'userIdType',
                    'type' => 'String',
                    'info' => 'The lead identifier type. One of: intercom_id, user_id, email.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'convertLeadToUser',
            'description' => 'Convert Lead to Users.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'leadId',
                    'type' => 'String',
                    'info' => 'The lead identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'leadIdType',
                    'type' => 'String',
                    'info' => 'The user identifier type. One of: intercom_id, user_id, email.',
                    'required' => true,
                ),
                array (
                    'name' => 'userId',
                    'type' => 'String',
                    'info' => 'Identifier of existing User.',
                    'required' => false,
                ),
                array (
                    'name' => 'userIdType',
                    'type' => 'String',
                    'info' => 'Identifier of existing user type. One of: intercom_id, user_id, email.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'scrollLeads',
            'description' => 'Scroll over all Leads.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'scrollParam',
                    'type' => 'String',
                    'info' => 'Scroll parameter.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'createCompany',
            'description' => 'Create company.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'The name of the company.',
                    'required' => true,
                ),
                array (
                    'name' => 'monthlySpend',
                    'type' => 'Number',
                    'info' => 'How much revenue the company generates for your business.',
                    'required' => false,
                ),
                array (
                    'name' => 'plan',
                    'type' => 'String',
                    'info' => 'The name of the plan you have associated with the company.',
                    'required' => false,
                ),
                array (
                    'name' => 'customAttributes',
                    'type' => 'JSON',
                    'info' => 'A hash of key - value pairs containing any other data about the company you want Intercom to store.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'updateCompany',
            'description' => 'Update company.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'companyId',
                    'type' => 'String',
                    'info' => 'The company identifier.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'The name of the company.',
                    'required' => false,
                ),
                array (
                    'name' => 'monthlySpend',
                    'type' => 'number',
                    'info' => 'How much revenue the company generates for your business.',
                    'required' => false,
                ),
                array (
                    'name' => 'plan',
                    'type' => 'String',
                    'info' => 'The name of the plan you have associated with the company.',
                    'required' => false,
                ),
                array (
                    'name' => 'customAttributes',
                    'type' => 'object',
                    'info' => 'A hash of key - value pairs containing any other data about the company you want Intercom to store.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getCompanies',
            'description' => 'Fetch a list of companies.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'page',
                    'type' => 'numb',
                    'info' => 'What page of results to fetch.',
                    'required' => false,
                ),
                array (
                    'name' => 'perPage',
                    'type' => 'numb',
                    'info' => 'How many results per page.',
                    'required' => false,
                ),
                array (
                    'name' => 'order',
                    'type' => 'String',
                    'info' => 'Return the companies in ascending or descending order. One of: asc, desc.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getCompaniesByTag',
            'description' => 'Fetch tagged companies by tag.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'tagId',
                    'type' => 'String',
                    'info' => 'The identifier of the tag to filter by.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getCompaniesBySegment',
            'description' => 'Fetch segmented companies by segment.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'segmentId',
                    'type' => 'String',
                    'info' => 'The identifier of the segment to filter by.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getSingleCompany',
            'description' => 'Fetch single company.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'companyId',
                    'type' => '',
                    'info' => 'The company identifier, you have given to the company.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getCompanyUsers',
            'description' => 'Fetch users that belong to a company.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'companyId',
                    'type' => 'String',
                    'info' => 'Your company identifier for the company.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'scrollCompanies',
            'description' => 'Scroll over all companies.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'scrollParam',
                    'type' => 'String',
                    'info' => 'Scroll parameter.',
                    'required' => false,
                ),
            ),
        ),
        array (
            'name' => 'getAdmins',
            'description' => 'fetching App\'s admins.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getCurrentAdmin',
            'description' => 'Fetching current admin of app.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'getSingleAdmin',
            'description' => 'Fetching one admin of app.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'adminId',
                    'type' => 'String',
                    'info' => 'Admins identifier.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'createTag',
            'description' => 'Create tag.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'The name of the tag.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'updateTag',
            'description' => 'Update tag.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'id',
                    'type' => 'String',
                    'info' => 'The identifier of tag to updates.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'New name of the tag.',
                    'required' => true,
                ),
            ),
        ),
        array (
            'name' => 'tagUser',
            'description' => 'Add tag to User.',
            'args' => array (
                array (
                    'name' => 'accessToken',
                    'type' => 'String',
                    'info' => 'Access token.',
                    'required' => true,
                ),
                array (
                    'name' => 'name',
                    'type' => 'String',
                    'info' => 'The name of the tag.',
                    'required' => true,
                ),
                array (
                    'name' => 'users',
                    'type' => 'Array',
                    'info' => 'Array of json object, of users user_id, intercom identifier or email. Example: [{"id" : "53427b7ecce5722303000003"},{"user_id" : "22"},{"email" : "a@b.com"}].',
                    'required' => true,
                ),
            ),
        ),
    ),
    'custom' => array (
        'createUserByEmail' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'email' => 'email',
                'userId' => 'user_id',
                'phone' => 'phone',
                'name' => 'name',
                'lastSeenIp' => 'last_seen_ip',
                'customAttributes' => 'custom_attributes',
                'lastSeenUserAgent' => 'last_seen_user_agent',
                'companies' => 'companies',
                'lastRequestAt' => 'last_request_at',
                'updateLastRequestAt' => 'update_last_request_at',
                'newSession' => 'new_session',
            ),
            'vendorUrl' => 'https://api.intercom.io/users',
            'method' => 'POST',
        ),
        'createUserById' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'userId' => 'user_id',
                'email' => 'email',
                'phone' => 'phone',
                'name' => 'name',
                'lastSeenIp' => 'last_seen_ip',
                'customAttributes' => 'custom_attributes',
                'lastSeenUserAgent' => 'last_seen_user_agent',
                'companies' => 'companies',
                'lastRequestAt' => 'last_request_at',
                'updateLastRequestAt' => 'update_last_request_at',
                'newSession' => 'new_session',
            ),
            'vendorUrl' => 'https://api.intercom.io/users',
            'method' => 'POST',
        ),
        'updateUserByEmail' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'email' => 'email',
                'userId' => 'user_id',
                'phone' => 'phone',
                'name' => 'name',
                'lastSeenIp' => 'last_seen_ip',
                'customAttributes' => 'custom_attributes',
                'lastSeenUserAgent' => 'last_seen_user_agent',
                'companies' => 'companies',
                'lastRequestAt' => 'last_request_at',
                'updateLastRequestAt' => 'update_last_request_at',
                'newSession' => 'new_session',
            ),
            'vendorUrl' => 'https://api.intercom.io/users',
            'method' => 'POST',
        ),
        'updateUserById' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'userId' => 'user_id',
                'email' => 'email',
                'phone' => 'phone',
                'name' => 'name',
                'lastSeenIp' => 'last_seen_ip',
                'customAttributes' => 'custom_attributes',
                'lastSeenUserAgent' => 'last_seen_user_agent',
                'companies' => 'companies',
                'lastRequestAt' => 'last_request_at',
                'updateLastRequestAt' => 'update_last_request_at',
                'newSession' => 'new_session',
            ),
            'vendorUrl' => 'https://api.intercom.io/users',
            'method' => 'POST',
        ),
        'getUsers' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'page' => 'page',
                'perPage' => 'per_page',
                'order' => 'order',
                'sort' => 'sort',
                'createdSince' => 'created_since',
            ),
            'vendorUrl' => 'https://api.intercom.io/users',
            'method' => 'GET',
        ),
        'getUsersByTag' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'tagId' => 'tag_id',
            ),
            'vendorUrl' => 'https://api.intercom.io/users',
            'method' => 'GET',
        ),
        'getUsersBySegment' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'segmentId' => 'segment_id',
            ),
            'vendorUrl' => 'https://api.intercom.io/users',
            'method' => 'GET',
        ),
        'getSingleUser' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'userId' => 'userId',
                'userIdType' => 'userIdType',
            ),
            'vendorUrl' => 'https://api.intercom.io/users/',
            'method' => 'GET',
        ),
        'deleteUser' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'userId' => 'userId',
                'userIdType' => 'userIdType',
            ),
            'vendorUrl' => 'https://api.intercom.io/users',
            'method' => 'DELETE',
        ),
        'scrollUsers' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'scrollParam' => 'scroll_param',
            ),
            'vendorUrl' => 'https://api.intercom.io/users/scroll',
            'method' => 'GET',
        ),
        'createLead' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'name' => 'name',
                'userId' => 'user_id',
                'email' => 'email',
                'phone' => 'phone',
                'avatarImageUrl' => 'avatar_image_url',
                'userAgentData' => 'user_agent_data',
                'lastSeenIp' => 'last_seen_ip',
                'companies' => 'companies',
                'socialProfiles' => 'social_profiles',
                'segments' => 'segments',
                'tags' => 'tags',
                'customAttributes' => 'custom_attributes',
                'locationData' => 'location_data',
            ),
            'vendorUrl' => 'https://api.intercom.io/contacts',
            'method' => 'POST',
            'custom' => true,
        ),
        'updateLead' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'userId' => 'user_id',
                'name' => 'name',
                'email' => 'email',
                'phone' => 'phone',
                'avatarImageUrl' => 'avatar_image_url',
                'userAgentData' => 'user_agent_data',
                'lastSeenIp' => 'last_seen_ip',
                'companies' => 'companies',
                'socialProfiles' => 'social_profiles',
                'segments' => 'segments',
                'tags' => 'tags',
                'customAttributes' => 'custom_attributes',
                'locationData' => 'location_data',
            ),
            'vendorUrl' => 'https://api.intercom.io/contacts',
            'method' => 'POST',
        ),
        'getLeads' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
            ),
            'vendorUrl' => 'https://api.intercom.io/contacts',
            'method' => 'GET',
        ),
        'getLeadsByEmail' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'email' => 'email',
            ),
            'vendorUrl' => 'https://api.intercom.io/contacts',
            'method' => 'GET',
        ),
        'getSingleLead' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'userId' => 'userId',
                'userIdType' => 'userIdType',
            ),
            'vendorUrl' => 'https://api.intercom.io/contacts',
            'method' => 'GET',
        ),
        'deleteLead' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'userId' => 'userId',
                'userIdType' => 'userIdType',
            ),
            'vendorUrl' => 'https://api.intercom.io/contacts',
            'method' => 'DELETE',
        ),
        'convertLeadToUser' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'leadId' => 'leadId',
                'leadIdType' => 'leadIdType',
                'userId' => 'userId',
                'userIdType' => 'userIdType',
            ),
            'vendorUrl' => 'https://api.intercom.io/contacts/convert',
            'method' => 'POST',
            'custom' => true,
        ),
        'scrollLeads' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'scrollParam' => 'scroll_param',
            ),
            'vendorUrl' => 'https://api.intercom.io/contacts/scroll',
            'method' => 'GET',
        ),
        'createCompany' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'name' => 'name',
                'monthlySpend' => 'monthly_spend',
                'plan' => 'plan',
                'customAttributes' => 'custom_attributes',
            ),
            'vendorUrl' => 'https://api.intercom.io/companies',
            'method' => 'POST',
        ),
        'updateCompany' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'companyId' => 'company_id',
                'name' => 'name',
                'monthlySpend' => 'monthly_spend',
                'plan' => 'plan',
                'customAttributes' => 'custom_attributes',
            ),
            'vendorUrl' => 'https://api.intercom.io/companies',
            'method' => 'POST',
        ),
        'getCompanies' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'page' => 'page',
                'perPage' => 'per_page',
                'order' => 'order',
            ),
            'vendorUrl' => 'https://api.intercom.io/companies',
            'method' => 'GET',
        ),
        'getCompaniesByTag' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'tagId' => 'tag_id',
            ),
            'vendorUrl' => 'https://api.intercom.io/companies',
            'method' => 'GET',
        ),
        'getCompaniesBySegment' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'segmentId' => 'segment_id',
            ),
            'vendorUrl' => 'https://api.intercom.io/companies',
            'method' => 'GET',
        ),
        'getSingleCompany' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'companyId' => 'company_id',
            ),
            'vendorUrl' => 'https://api.intercom.io/companies',
            'method' => 'GET',
        ),
        'getCompanyUsers' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'companyId' => 'company_id',
            ),
            'vendorUrl' => 'https://api.intercom.io/companies',
            'method' => 'GET',
            'custom' => true,
        ),
        'scrollCompanies' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'scrollParam' => 'scroll_param',
            ),
            'vendorUrl' => 'https://api.intercom.io/companies/scroll',
            'method' => 'GET',
        ),
        'getAdmins' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
            ),
            'vendorUrl' => 'https://api.intercom.io/admins',
            'method' => 'GET',
        ),
        'getCurrentAdmin' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
            ),
            'vendorUrl' => 'https://api.intercom.io/me',
            'method' => 'GET',
        ),
        'getSingleAdmin' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'adminId' => 'adminId',
            ),
            'vendorUrl' => 'https://api.intercom.io/admins/{adminId}',
            'method' => 'GET',
        ),
        'createTag' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'name' => 'name',
            ),
            'vendorUrl' => 'https://api.intercom.io/tags',
            'method' => 'POST',
        ),
        'updateTag' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'id' => 'id',
                'name' => 'name',
            ),
            'vendorUrl' => 'https://api.intercom.io/tags',
            'method' => 'POST',
        ),
        'tagUser' => array (
            'dictionary' => array (
                'accessToken' => 'accessToken',
                'name' => 'name',
                'users' => 'users',
            ),
            'vendorUrl' => 'https://api.intercom.io/tags',
            'method' => 'POST',
            'custom' => true,
        ),
    ),
);